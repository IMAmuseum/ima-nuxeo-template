<?xml version="1.0"?>
<component name="org.nuxeo.ecm.directory.ldap.storage.users">

	<!--
	We declare a custom user directory using our Windows domain.
	There is a good change you will need to customize this for any other installations.
	-->

	<implementation class="org.nuxeo.ecm.directory.ldap.LDAPDirectoryDescriptor" />
	<implementation class="org.nuxeo.ecm.directory.ldap.LDAPServerDescriptor" />

	<require>org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory</require>
	<require>org.nuxeo.ecm.directory.sql.storage</require>

	<extension target="org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory" point="servers">

		<!-- Configuration of a server connection A single server declaration can 
			point to a cluster of replicated servers (using OpenLDAP's slapd + sluprd 
			for instance). To leverage such a cluster and improve availability, please 
			provide one <ldapUrl/> tag for each replica of the cluster. -->
		<server name="imart">
			<ldapUrl>${imamuseum.ldap.url}</ldapUrl>
			<bindDn>${imamuseum.ldap.binddn}</bindDn>
			<bindPassword>${imamuseum.ldap.bindpassword}</bindPassword>
		</server>

	</extension>

	<extension target="org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory" point="directories">

		<directory name="imartUserDirectory">
			<server>imart</server>
			<schema>user</schema>
			<idField>username</idField>
			<passwordField>password</passwordField>

			<searchBaseDn>${imamuseum.ldap.basedn}</searchBaseDn>
			<searchClass>User</searchClass>
			<!-- To additionally restricte entries you can add an arbitrary search 
				filter such as the following: <searchFilter>(&amp;(sn=toto*)(myCustomAttribute=somevalue))</searchFilter> 
				Beware that "&" writes "&amp;" in XML. -->
			<searchFilter>(sAMAccountType=805306368)</searchFilter>

			<!-- use subtree if the people branch is nested -->
			<searchScope>subtree</searchScope>

			<!-- using 'subany', search will match *toto*. use 'subfinal' to match 
				*toto and 'subinitial' to match toto*. subinitial is the default behaviour -->
			<substringMatchType>subany</substringMatchType>
			<readOnly>true</readOnly>

			<!-- comment <cache* /> tags to disable the cache -->
			<!-- cache timeout in seconds -->
			<cacheTimeout>3600</cacheTimeout>

			<!-- maximum number of cached entries before global invalidation -->
			<cacheMaxSize>1000</cacheMaxSize>

			<!-- If the id field is not returned by the search, we set it with the 
				searched entry, probably the login. Before setting it, you can change its 
				case. Accepted values are 'lower' and 'upper', anything else will not change 
				the case. -->
			<missingIdFieldCase>lower</missingIdFieldCase>

			<!-- Maximum number of entries returned by the search -->
			<querySizeLimit>200</querySizeLimit>

			<!-- Time to wait for a search to finish. 0 to wait indefinitely -->
			<queryTimeLimit>3600</queryTimeLimit>

			<!-- <creationBaseDn>dc=imart,dc=local</creationBaseDn> <creationClass>top</creationClass> 
				<creationClass>person</creationClass> <creationClass>organizationalPerson</creationClass> 
				<creationClass>inetOrgPerson</creationClass> -->

			<rdnAttribute>uid</rdnAttribute>
			<fieldMapping name="username">sAMAccountName</fieldMapping>
			<fieldMapping name="password">userPassword</fieldMapping>
			<fieldMapping name="firstName">givenName</fieldMapping>
			<fieldMapping name="lastName">sn</fieldMapping>
			<fieldMapping name="company">company</fieldMapping>
			<fieldMapping name="email">mail</fieldMapping>

			<references>

				<inverseReference field="groups" directory="imartGroupDirectory"
					dualReferenceField="members" />

			</references>

		</directory>

	</extension>

</component>
