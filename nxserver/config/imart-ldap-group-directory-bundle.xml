<?xml version="1.0"?>
<component name="org.nuxeo.ecm.directory.ldap.storage.groups">

	<!--
	We declare a custom group directory using our Windows domain.
	There is a good change you will need to customize this for any other installations.
	-->

	<implementation class="org.nuxeo.ecm.directory.ldap.LDAPDirectoryDescriptor" />
	<implementation class="org.nuxeo.ecm.directory.ldap.LDAPServerDescriptor" />

	<require>org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory</require>
	<require>org.nuxeo.ecm.directory.ldap.storage.users</require>

	<extension target="org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory" point="directories">

		<directory name="imartGroupDirectory">

			<!-- Reuse the default server configuration defined for userDirectory -->
			<server>imart</server>

			<schema>group</schema>
			<idField>groupname</idField>

			<searchBaseDn>${imamuseum.ldap.basedn}</searchBaseDn>
			<!-- <searchFilter> (objectClass=group) </searchFilter> -->
			<searchClass>group</searchClass>
			<searchScope>subtree</searchScope>

			<readOnly>true</readOnly>

			<!-- comment <cache* /> tags to disable the cache -->
			<!-- cache timeout in seconds -->
			<cacheTimeout>3600</cacheTimeout>

			<!-- maximum number of cached entries before global invalidation -->
			<cacheMaxSize>1000</cacheMaxSize>

			<!--
			<creationBaseDn>ou=groups,dc=example,dc=com</creationBaseDn>
			<creationClass>top</creationClass> 
			<creationClass>groupOfUniqueNames</creationClass>
			-->

			<!-- Maximum number of entries returned by the search -->
			<querySizeLimit>200</querySizeLimit>

			<!-- Time to wait for a search to finish. 0 to wait indefinitely -->
			<queryTimeLimit>3600</queryTimeLimit>

			<rdnAttribute>cn</rdnAttribute>
			<fieldMapping name="groupname">sAMAccountName</fieldMapping>

			<references>

				<!-- LDAP reference resolve DNs embedded in uniqueMember attributes If 
					the target directory has no specific filtering policy, it is most of the 
					time not necessary to enable the 'forceDnConsistencyCheck' policy. Enabling 
					this option will fetch each reference entry to ensure its existence in the 
					target directory. -->

				<ldapReference field="members" directory="imartUserDirectory"
					forceDnConsistencyCheck="false" staticAttributeId="member"
					dynamicAttributeId="memberURL" />
				
				<ldapReference field="parentGroups" directory="imartGroupDirectory"
					forceDnConsistencyCheck="false" staticAttributeId="memberOf"
					dynamicAttributeId="memberURL" />
					
				<inverseReference field="subGroups" directory="imartGroupDirectory"
					dualReferenceField="parentGroups" />

				
				<!-- LDAP tree reference resolves children following the ldap tree structure. 
					Available scopes are "onelevel" (default), "subtree". Children with same 
					id than parent will be filtered. Enabling this option will fetch each reference 
					entry to ensure its existence in the target directory. WARNING: Edit is NOT 
					IMPLEMENTED: modifications to this field will be ignored when saving the 
					entry. -->
				<!--
				<ldapTreeReference field="directChildren" directory="unitDirectory" 
					scope="onelevel" />
				<ldapTreeReference field="children" directory="unitDirectory" 
					scope="subtree" />
				-->

			</references>

		</directory>

	</extension>

</component> 
